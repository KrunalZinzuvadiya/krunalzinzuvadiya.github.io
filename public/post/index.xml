<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Daciana Draghia&#39;s Portfolio</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Projects on Daciana Draghia&#39;s Portfolio</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Apr 2024 11:00:59 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>REST API aplication on Google Cloud Platform</title>
      <link>http://localhost:1313/post/chapter-2/</link>
      <pubDate>Wed, 10 Apr 2024 11:00:59 -0400</pubDate>
      <guid>http://localhost:1313/post/chapter-2/</guid>
      <description>&lt;p&gt;The project presents a REST API aplication developed in Python and Flask that was created to retrieve data about books from a SQLite3 database: &lt;a href=&#34;https://github.com/cpatrickalves/simple-flask-api&#34;&gt;https://github.com/cpatrickalves/simple-flask-api&lt;/a&gt;&#xA;A REST API exposes the functionalities of an application or a database through a set of endpoints (URL addresses).&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/image13.png&#34; alt=&#34;alt text&#34; title=&#34;Overview&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;These URLs are accessed by clients such as web, mobile apps, or other web services to perform CRUD operations (Create, Read, Update, Delete) or other actions using HTTP requests. The principles of REST and the use of HTTP methods (GET for reading, POST for creating, PUT/PATCH for updating, and DELETE for deleting) allow resources to be manipulated in a standardized and intuitive way.&#xA;Description of the Data Model Used&#xA;Our database “books.db” contains information about books. Data are stored and managed using SQLite - a serverless, file-based relational database management system.&#xA;Choosing Data Storage Solutions, Justifying the Decision&#xA;Since we are working with a relational database, with structured data, where each item (&amp;ldquo;book&amp;rdquo; in this case) has the same set of attributes with specific values, a good choice would be to use a combination of Google Cloud Storage and BigQuery.&#xA;Implementation of the Used Data Model&#xA;We will use App Engine, BigQuery, and Google Cloud Storage:&#xA;● The user sends an HTTP request to the Flask application.&#xA;● app.py receives the request and, if necessary, performs queries to BigQuery.&#xA;● app.py uses requirements.txt to ensure that all necessary libraries are available for processing the request.&#xA;● app.yaml plays a role in configuring how the application is deployed and managed on App Engine, influencing how requests are handled.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fingerprint recognition, Python, Tkinter</title>
      <link>http://localhost:1313/post/chapter-1/</link>
      <pubDate>Fri, 01 Mar 2024 13:16:06 +0300</pubDate>
      <guid>http://localhost:1313/post/chapter-1/</guid>
      <description>&lt;p&gt;A biometric fingerprint recognition system is organized into four main stages: fingerprint input, feature extraction of fingerprints, comparison stage with the fingerprint set from the database (1:N type comparisons), and the final stage of deciding whether there is a match with a record in the dataset.&#xA;&lt;a href=&#34;https://github.com/ddaci/Recunoastere_amprenta_digitala&#34;&gt;link to the project on github&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;The following figure shows the logical scheme and structure of the project. It also illustrates the addition of a new fingerprint to the database and the deletion of a record.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tutorial - static website with Hugo and Github pages</title>
      <link>http://localhost:1313/post/chapter-5/</link>
      <pubDate>Thu, 13 Apr 2017 11:15:58 -0400</pubDate>
      <guid>http://localhost:1313/post/chapter-5/</guid>
      <description>&lt;p&gt;This tutorial will help you build and host your static website.&#xA;&lt;a href=&#34;https://youtu.be/LcKkrVuezSo&#34;&gt;link to the video on youtube&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Install powershell 7 on a windows system&#xA;Check the version of PowerShell you have on your system, open PowerShell and type&#xA;$PSVersionTable.PSVersion&#xA;To install PowerShell 7 on your system using Winget  type the following command t&#xA;winget install &amp;ndash;id Microsoft.Powershell &amp;ndash;source winget&lt;/li&gt;&#xA;&lt;li&gt;Install Visual studio code&lt;/li&gt;&#xA;&lt;li&gt;Install Go&lt;/li&gt;&#xA;&lt;li&gt;Setup a github account and github desktop&lt;/li&gt;&#xA;&lt;li&gt;Installing Hugo using Chocolatey&#xA;Chocolatey is a popular package manager for Windows that simplifies the installation of software and manages dependencies neatly.&#xA;Step 1: Install Chocolatey&#xA;Open PowerShell 7 as an Administrator and type:&#xA;Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&amp;lsquo;&lt;a href=&#34;https://chocolatey.org/install.ps1&#39;&#34;&gt;https://chocolatey.org/install.ps1&#39;&lt;/a&gt;))&#xA;Step 2: Install Hugo extended Using Chocolatey&#xA;choco install hugo-extended -confirm&lt;/li&gt;&#xA;&lt;li&gt;Install Dart Sass using Chocolatey&#xA;choco install sass&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Resourses&lt;/p&gt;</description>
    </item>
    <item>
      <title>Power BI: Pie chart</title>
      <link>http://localhost:1313/post/chapter-4/</link>
      <pubDate>Wed, 12 Apr 2017 11:14:48 -0400</pubDate>
      <guid>http://localhost:1313/post/chapter-4/</guid>
      <description>&lt;p&gt;Our data:&#xA;&lt;img src=&#34;http://localhost:1313/images/ProjectPiedb.png&#34; alt=&#34;alt text&#34; title=&#34;Overview&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The result&#xA;&lt;img src=&#34;http://localhost:1313/images/projectpieviz.png&#34; alt=&#34;alt text&#34; title=&#34;Overview&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Power BI: extracting values</title>
      <link>http://localhost:1313/post/chapter-3/</link>
      <pubDate>Tue, 11 Apr 2017 11:13:32 -0400</pubDate>
      <guid>http://localhost:1313/post/chapter-3/</guid>
      <description>&lt;p&gt;Question to be answered in this project:&#xA;How many kids do married people have in average in our dataset?&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/xtractingvaluesdb.png&#34; alt=&#34;alt text&#34; title=&#34;Overview&#34;&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;I cleaned the data first using the following tools /steps in Power BI:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;o Remove Top Rows&lt;/p&gt;&#xA;&lt;p&gt;o First row as a header&lt;/p&gt;&#xA;&lt;p&gt;o Changing column names&lt;/p&gt;&#xA;&lt;p&gt;o Removing invalid rows&lt;/p&gt;&#xA;&lt;p&gt;o Setting up the data types (replace values if necessary)&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/extractingvaluesviz.png&#34; alt=&#34;alt text&#34; title=&#34;Overview&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
